/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Dependents.java
 *
 * Created on Oct 31, 2010, 3:21:47 PM
 */
package com.jcl.payroll.ui;


import com.jcl.hrm.Employee;
import com.jcl.payroll.dtr.DailyTimeRecord;
import com.jcl.payroll.enumtypes.DTRType;
import com.jcl.payroll.enumtypes.FamilyRelationship;
import com.jcl.utilities.MyDateFormatter;
import com.jcl.utilities.TransactionException;
import com.jcl.utils.SelectedButton;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author junald
 */
public class DTREntry extends javax.swing.JDialog {

    public SelectedButton selectedButton = SelectedButton.Cancel;
    public DailyTimeRecord dtr;
    public SimpleDateFormat sdf2;
    public SimpleDateFormat stf;
    public Employee employee;

    /** Creates new form Dependents */
    public DTREntry(java.awt.Frame parent, boolean modal, DailyTimeRecord dtr, Employee ee) {
        super(parent, modal);
        this.dtr = dtr;
        initComponents();
        employee = ee;
        sdf2 = MyDateFormatter.getDateTimeFormatter();
        stf = MyDateFormatter.getTimeFormatter2();
        txtWorkingDate.setFormats("MM/dd/yyyy");
//        ComboBoxModel cbm = new DefaultComboBoxModel(DTRType.values());
//        comboDTRType.setModel(cbm);
        for(DTRType dt: DTRType.values()){
            comboDTRType.addItem(dt.name());
        }
        labelCompleteName.setText(ee.getName());
        initScreen();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        panelDTR = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtWorkingDate = new org.jdesktop.swingx.JXDatePicker();
        comboDTRType = new javax.swing.JComboBox();
        labelName = new javax.swing.JLabel();
        labelCompleteName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTimeInAm = new javax.swing.JFormattedTextField();
        txtTimeOutAm = new javax.swing.JFormattedTextField();
        txtTimeInPM = new javax.swing.JFormattedTextField();
        txtTimeOutPm = new javax.swing.JFormattedTextField();
        txtNotes = new javax.swing.JTextField();
        labelHours = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dependents");
        setMinimumSize(new java.awt.Dimension(50, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMaximumSize(new java.awt.Dimension(250, 35));
        jPanel2.setMinimumSize(new java.awt.Dimension(250, 35));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 35));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancel);

        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(65, 23));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        panelDTR.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelDTR.setMaximumSize(new java.awt.Dimension(250, 225));
        panelDTR.setMinimumSize(new java.awt.Dimension(250, 225));
        panelDTR.setPreferredSize(new java.awt.Dimension(250, 225));
        panelDTR.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel5, gridBagConstraints);

        jLabel4.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel4, gridBagConstraints);

        txtWorkingDate.setNextFocusableComponent(comboDTRType);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtWorkingDate, gridBagConstraints);

        comboDTRType.setNextFocusableComponent(txtTimeInAm);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(comboDTRType, gridBagConstraints);

        labelName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 3, 5);
        panelDTR.add(labelName, gridBagConstraints);

        labelCompleteName.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelCompleteName.setForeground(java.awt.Color.blue);
        labelCompleteName.setText("Lavador, Junald Conde");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 5);
        panelDTR.add(labelCompleteName, gridBagConstraints);

        jLabel1.setText("Time In AM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Time Out AM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Time In PM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel3, gridBagConstraints);

        jLabel6.setText("Time Out PM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        panelDTR.add(jLabel7, gridBagConstraints);

        txtTimeInAm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtTimeInAm.setNextFocusableComponent(txtTimeOutAm);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtTimeInAm, gridBagConstraints);

        txtTimeOutAm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtTimeOutAm.setNextFocusableComponent(txtTimeInPM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtTimeOutAm, gridBagConstraints);

        txtTimeInPM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtTimeInPM.setNextFocusableComponent(txtTimeOutPm);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtTimeInPM, gridBagConstraints);

        txtTimeOutPm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtTimeOutPm.setNextFocusableComponent(txtNotes);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtTimeOutPm, gridBagConstraints);

        txtNotes.setText(" ");
        txtNotes.setNextFocusableComponent(btnSave);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        panelDTR.add(txtNotes, gridBagConstraints);

        labelHours.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelDTR.add(labelHours, gridBagConstraints);

        getContentPane().add(panelDTR, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            selectedButton = SelectedButton.Save;
            saveScreen();
            this.setVisible(false);
        } catch (TransactionException ex) {
            Logger.getLogger(DTREntry.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (UniqueFieldValueConstraintViolationException ex) {
//            Logger.getLogger(DTREntry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(DTREntry.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        selectedButton = SelectedButton.Cancel;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DTREntry dialog = new DTREntry(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox comboDTRType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelCompleteName;
    private javax.swing.JLabel labelHours;
    private javax.swing.JLabel labelName;
    private javax.swing.JPanel panelDTR;
    private javax.swing.JTextField txtNotes;
    private javax.swing.JFormattedTextField txtTimeInAm;
    private javax.swing.JFormattedTextField txtTimeInPM;
    private javax.swing.JFormattedTextField txtTimeOutAm;
    private javax.swing.JFormattedTextField txtTimeOutPm;
    private org.jdesktop.swingx.JXDatePicker txtWorkingDate;
    // End of variables declaration//GEN-END:variables

    private void initScreen() {

        if (dtr.getTid() == -1 && dtr.getSourceTid() == -1) {
            System.out.println("Regular" + " : " + dtr.getSourceTid());
            comboDTRType.setSelectedItem("Regular");

        } else {
            System.out.println(dtr.getDtrType() + " : " + dtr.getSourceTid());
            comboDTRType.setSelectedItem(dtr.getDtrType());
        }
        txtWorkingDate.setDate(dtr.getDate());
        txtNotes.setText(dtr.getNotes());
        txtTimeInAm.setText(stf.format(dtr.getTimeIn1()));
        txtTimeOutAm.setText(stf.format(dtr.getTimeOut1()));
        txtTimeInPM.setText(stf.format(dtr.getTimeIn2()));
        txtTimeOutPm.setText(stf.format(dtr.getTimeOut2()));

        if (dtr.getSourceTid() != -1 || dtr.isProcess()) {
            btnSave.setEnabled(false);
        }

        labelHours.setText(MyDateFormatter.getNumberOfHours(dtr)+" hrs");
    }

    private void saveScreen() throws TransactionException,  Exception {

        if (dtr.getSourceTid() != -1) {
            return;
        }
        dtr.setDate(txtWorkingDate.getDate());
        dtr.setDtrType(comboDTRType.getSelectedItem().toString());
        System.out.println(txtTimeInAm.getText());
        //  System.out.println(txtTimeInAm.getValue().toString());

        String wdate = MyDateFormatter.getDateDataFormatter().format(dtr.getDate());
//
//        Date t1 = sdf2.parse(wdate + " " + txtTimeInAm.getText() + ":00 AM");
//        Date t2 = sdf2.parse(wdate + " " + txtTimeOutAm.getText() + ":00 PM");
//        Date t3 = sdf2.parse(wdate + " " + txtTimeInPM.getText() + ":00 PM");
//        Date t4 = sdf2.parse(wdate + " " + txtTimeOutPm.getText() + ":00 PM");
//


        String in1 = txtTimeInAm.getText().replaceAll(" AM", ":00 AM");         
        String out1 = txtTimeOutAm.getText().replaceAll(" AM", ":00 AM");
        if(txtTimeInAm.getText().contains(" PM")){
            in1 = txtTimeInAm.getText().replaceAll(" PM", ":00 PM");
        }
        if(txtTimeOutAm.getText().contains(" PM")){
             out1 = txtTimeOutAm.getText().replaceAll(" PM", ":00 PM");
        }


        String in2=    txtTimeInPM.getText().replaceAll(" PM", ":00 PM");
        String out2=     txtTimeOutPm.getText().replaceAll(" PM", ":00 PM");
        if(txtTimeInPM.getText().contains(" AM")){
            in1 = txtTimeInPM.getText().replaceAll(" AM", ":00 AM");
        }
        if(txtTimeOutPm.getText().contains(" AM")){
             out1 = txtTimeOutPm.getText().replaceAll(" AM", ":00 AM");
        }


        Date t1 = sdf2.parse(wdate + " " + in1 );
        Date t2 = sdf2.parse(wdate + " " + out1 );
        Date t3 = sdf2.parse(wdate + " " + in2 );
        Date t4 = sdf2.parse(wdate + " " + out2 );
        System.out.println("t1:[" + t1 + "] t2:[" + t2 + "] t3:[" + t3 + "] t4:[" + t4 + "]");
        dtr.setTimeIn1(t1);
        dtr.setTimeOut1(t2);
        dtr.setTimeIn2(t3);
        dtr.setTimeOut2(t4);
        dtr.setNotes(txtNotes.getText());

          
      //  dbms.save(dtr);


    }
}
