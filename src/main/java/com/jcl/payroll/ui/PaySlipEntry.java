/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Dependents.java
 *
 * Created on Oct 31, 2010, 3:21:47 PM
 */
package com.jcl.payroll.ui;

import com.jcl.model.Employee;
import com.jcl.payroll.enumtypes.DTRType;
import com.jcl.model.PaySlipDetail;
import com.jcl.payroll.enumtypes.PayslipDetailType;
import com.jcl.utilities.MyDateFormatter;
import com.jcl.utilities.TransactionException;
import com.jcl.utils.SelectedButton;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author junald
 */
public class PaySlipEntry extends javax.swing.JDialog {

    public SelectedButton selectedButton = SelectedButton.Cancel;
    public PaySlipDetail psd;
    public SimpleDateFormat sdf2;
    public SimpleDateFormat stf;

    /**
     * Creates new form Dependents
     */
    public PaySlipEntry(java.awt.Frame parent, boolean modal, PaySlipDetail psd) {
        super(parent, modal);
        this.psd = psd;
        initComponents();

        sdf2 = MyDateFormatter.getDateTimeFormatter();
        stf = MyDateFormatter.getTimeFormatter2();

        for (PayslipDetailType dt : PayslipDetailType.values()) {
            comboDTRType.addItem(dt.name());
        }
        labelCompleteName.setText(this.psd.getPaySlip().getEmployee().getName());
        initScreen();


    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        panelDTR = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboDTRType = new javax.swing.JComboBox();
        labelName = new javax.swing.JLabel();
        labelCompleteName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JFormattedTextField();
        txtQuantity = new javax.swing.JFormattedTextField();
        txtTotal = new javax.swing.JFormattedTextField();
        txtNotes = new javax.swing.JTextField();
        checkIsDeductable = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PaySlip Detail");
        setMinimumSize(new java.awt.Dimension(50, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMaximumSize(new java.awt.Dimension(250, 35));
        jPanel2.setMinimumSize(new java.awt.Dimension(250, 35));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 35));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancel);

        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(65, 23));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        panelDTR.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelDTR.setMaximumSize(new java.awt.Dimension(250, 225));
        panelDTR.setMinimumSize(new java.awt.Dimension(250, 225));
        panelDTR.setPreferredSize(new java.awt.Dimension(250, 225));
        panelDTR.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel5, gridBagConstraints);

        comboDTRType.setNextFocusableComponent(txtAmount);
        comboDTRType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDTRTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(comboDTRType, gridBagConstraints);

        labelName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 3, 5);
        panelDTR.add(labelName, gridBagConstraints);

        labelCompleteName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelCompleteName.setForeground(java.awt.Color.blue);
        labelCompleteName.setText("Lavador, Junald Conde");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 5);
        panelDTR.add(labelCompleteName, gridBagConstraints);

        jLabel1.setText("Time in decimal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Rates");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel2, gridBagConstraints);

        jLabel6.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(jLabel7, gridBagConstraints);

        txtAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.##"))));
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmount.setNextFocusableComponent(txtQuantity);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtAmount, gridBagConstraints);

        txtQuantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.##"))));
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtQuantity, gridBagConstraints);

        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.00"))));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setNextFocusableComponent(txtNotes);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtTotal, gridBagConstraints);

        txtNotes.setText(" ");
        txtNotes.setNextFocusableComponent(btnSave);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        panelDTR.add(txtNotes, gridBagConstraints);

        checkIsDeductable.setText("Deductable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        panelDTR.add(checkIsDeductable, gridBagConstraints);

        getContentPane().add(panelDTR, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            selectedButton = SelectedButton.Save;
            saveScreen();
            this.setVisible(false);
        } catch (TransactionException ex) {
            Logger.getLogger(PaySlipEntry.class.getName()).log(Level.SEVERE, null, ex);

        } catch (Exception ex) {
            Logger.getLogger(PaySlipEntry.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        selectedButton = SelectedButton.Cancel;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void comboDTRTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDTRTypeActionPerformed

        String s = (String) comboDTRType.getSelectedItem();
        setTextFields(s);

    }//GEN-LAST:event_comboDTRTypeActionPerformed

    private void setTextFields(String s) {
        PayslipDetailType stype = PayslipDetailType.valueOf(s);

        if (stype == PayslipDetailType.Absent || stype == PayslipDetailType.Undertime
                || stype == PayslipDetailType.Holiday || stype == PayslipDetailType.Overtime
                || stype == PayslipDetailType.VL || stype == PayslipDetailType.SL || stype == PayslipDetailType.WorkedHours) {

            txtAmount.setEnabled(true);
            txtQuantity.setEnabled(true);
        } else {
            txtAmount.setEnabled(false);
            txtQuantity.setEnabled(false);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox checkIsDeductable;
    private javax.swing.JComboBox comboDTRType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelCompleteName;
    private javax.swing.JLabel labelName;
    private javax.swing.JPanel panelDTR;
    private javax.swing.JFormattedTextField txtAmount;
    private javax.swing.JTextField txtNotes;
    private javax.swing.JFormattedTextField txtQuantity;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void initScreen() {

        if (psd.getGenerated()) {
            setTextFields(psd.getPaySlipDetailType());
            comboDTRType.setEnabled(false);
            txtQuantity.setEditable(false);
            txtAmount.setEditable(false);
            txtTotal.setEditable(false);
            checkIsDeductable.setEnabled(false);
            btnSave.setEnabled(false);
        }
        
        
        comboDTRType.setSelectedItem(psd.getPaySlipDetailType());
            
        txtNotes.setText(psd.getDescription());
        txtAmount.setValue(psd.getAmount());

        txtTotal.setValue(psd.getTotal());
        checkIsDeductable.setSelected(psd.getDeduction());

        if (psd.getProcess()) {
            btnSave.setEnabled(false);
        }
 
    }

    private void saveScreen() throws TransactionException, Exception {


        psd.setPaySlipDetailType(comboDTRType.getSelectedItem().toString());
        psd.setDescription(txtNotes.getText());
        psd.setQuantity(Double.valueOf(txtQuantity.getText().toString().length()>0?txtQuantity.getText():"0"));
        psd.setAmount(Double.valueOf(txtAmount.getText().toString().length()>0?txtAmount.getText():"0"));
        psd.setTotal(Double.valueOf(txtTotal.getText()));
        psd.setDeduction(checkIsDeductable.isSelected());

//        dbms.save(psd);
//        dbms.getDBInstance().ext().refresh(psd, Integer.MAX_VALUE);
    }
}
