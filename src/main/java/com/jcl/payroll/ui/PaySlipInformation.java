/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmployeeInformation.java
 *
 * Created on Sep 27, 2010, 1:13:42 PM
 */
package com.jcl.payroll.ui;

import com.jcl.customizetable.DateTableCellRenderer;
import com.jcl.customizetable.NonEditableDefaultTableModel;
import com.jcl.customizetable.NumberTableCellRenderer;
import com.jcl.customizetable.TransactionNumberTableCellRenderer;
import com.jcl.dao.PayrollPeriodDao;
import com.jcl.dbms.dbms;
import com.jcl.main.MainApp;
import com.jcl.model.*;
import com.jcl.observables.PanelMessage;
import com.jcl.payroll.enumtypes.DTRType;
import com.jcl.payroll.enumtypes.PayrollPeriodStatus;
import com.jcl.payroll.enumtypes.PayslipDetailType;
import com.jcl.payroll.transaction.PaySlipProcess;
import com.jcl.payroll.transaction.PaySlipProcess2;
import com.jcl.reports.ReportViewerFactory;
import com.jcl.utilities.MyDateFormatter;
import com.jcl.utilities.MyNumberFormatter;
import com.jcl.utilities.TransactionException;
import com.jcl.utils.KeyValue;
import com.jcl.utils.SelectedButton;
import com.jcl.verycommon.JOptionErrorMessage;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.sf.jasperreports.swing.JRViewer;
import org.springframework.beans.factory.annotation.Autowired;

/**
 *
 * @author jlavador
 */
@org.springframework.stereotype.Component
public class PaySlipInformation extends javax.swing.JPanel {

    @Autowired
    PayrollPeriodDao ppDao;
//    @Autowired
//    PaySlipProcess ppService;
    
    @Autowired
    PaySlipProcess2 ppService;
    private Employee ce;
    
    
    private boolean isSelectionMade = false;
    private SimpleDateFormat sdf;
    private SimpleDateFormat stf;

    /**
     * Creates new form EmployeeInformation
     */
    public PaySlipInformation() {
        initComponents();
    }

    public void setup() {
        try {

            sdf = MyDateFormatter.getSimpleDateTimeFormatter();
            stf = MyDateFormatter.getTimeFormatter();

            disabledComponents(false);
            disabledComponents();
            //initTreeView();
            initComboBoxes();

            this.comboStatus.setEnabled(false);
        } catch (Exception ex) {
            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void disabledComponents() {


        this.jLabel40.setVisible(false);
        this.jLabel41.setVisible(false);
        //    this.jLabel42.setVisible(false);
        //  this.textAllowance.setVisible(false);
        this.textMinuteRate.setVisible(false);
        this.textHourlyRate.setVisible(false); //dailyRate

    }

    private void disabledComponents(boolean s) {
        for (Component c : panelEmployeeInfo.getComponents()) {
            c.setEnabled(s);
        }

        for (Component c : panelContactInfo4.getComponents()) {
            c.setEnabled(s);
        }

        for (Component c : jPanel1.getComponents()) {
            c.setEnabled(s);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelTop = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        panelBottom = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelLeft = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmployees = new javax.swing.JTable();
        panelLoaderRate = new javax.swing.JPanel();
        btnPayslipAll = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        panelPayrollPeriod = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        comboPayrollPeriod = new javax.swing.JComboBox();
        includeOthers = new javax.swing.JCheckBox();
        btnRefresh = new javax.swing.JButton();
        panelPayrollPeriodInfo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labelDatePrepared = new javax.swing.JLabel();
        labelType = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox();
        txtNotes = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        labelFrom = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelTo = new javax.swing.JLabel();
        btnFinalized = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        panelCenter = new javax.swing.JPanel();
        panelEmployeeInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        labelCompleteName = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        panelContactInfo4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        textBasicSalary = new javax.swing.JFormattedTextField();
        textDailyRate = new javax.swing.JFormattedTextField();
        textHourlyRate = new javax.swing.JFormattedTextField();
        textMinuteRate = new javax.swing.JFormattedTextField();
        textAllowance = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        labelPayType = new javax.swing.JLabel();
        labelPostion = new javax.swing.JLabel();
        panelOthers = new javax.swing.JPanel();
        panelDTR = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnInsertDetail = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        labelPayslipDetailInfo = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableDTR = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        labelPayslipHeader = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.BorderLayout());

        panelTop.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.inactiveTitleGradient"));
        panelTop.setMinimumSize(new java.awt.Dimension(0, 25));
        panelTop.setPreferredSize(new java.awt.Dimension(750, 25));
        panelTop.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Pay Slip");
        panelTop.add(jLabel8);

        add(panelTop, java.awt.BorderLayout.PAGE_START);

        panelBottom.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelBottom.setMinimumSize(new java.awt.Dimension(0, 32));
        panelBottom.setPreferredSize(new java.awt.Dimension(750, 40));
        panelBottom.setLayout(new java.awt.GridBagLayout());

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelBottom.add(btnClose, gridBagConstraints);

        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        panelBottom.add(btnSave, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelBottom.add(jPanel5, gridBagConstraints);

        btnNew.setMnemonic('N');
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        panelBottom.add(btnNew, gridBagConstraints);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        panelBottom.add(btnCancel, gridBagConstraints);

        add(panelBottom, java.awt.BorderLayout.PAGE_END);

        jSplitPane1.setDividerLocation(450);

        panelLeft.setLayout(new java.awt.BorderLayout());

        tableEmployees.setAutoCreateRowSorter(true);
        tableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableEmployees.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableEmployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEmployeesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEmployees);

        panelLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelLoaderRate.setMaximumSize(new java.awt.Dimension(32767, 32));
        panelLoaderRate.setMinimumSize(new java.awt.Dimension(0, 32));
        panelLoaderRate.setPreferredSize(new java.awt.Dimension(349, 32));
        panelLoaderRate.setLayout(new java.awt.GridBagLayout());

        btnPayslipAll.setText("Generate All Payslip");
        btnPayslipAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayslipAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        panelLoaderRate.add(btnPayslipAll, gridBagConstraints);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelLoaderRate.add(jPanel4, gridBagConstraints);

        panelLeft.add(panelLoaderRate, java.awt.BorderLayout.SOUTH);

        panelPayrollPeriod.setLayout(new java.awt.GridBagLayout());

        jLabel45.setText("Payroll Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panelPayrollPeriod.add(jLabel45, gridBagConstraints);

        comboPayrollPeriod.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboPayrollPeriod.setForeground(java.awt.Color.blue);
        comboPayrollPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPayrollPeriodActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPayrollPeriod.add(comboPayrollPeriod, gridBagConstraints);

        includeOthers.setText("Include Process Payroll Period");
        includeOthers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                includeOthersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        panelPayrollPeriod.add(includeOthers, gridBagConstraints);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        panelPayrollPeriod.add(btnRefresh, gridBagConstraints);

        panelPayrollPeriodInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelPayrollPeriodInfo.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Date Prepared");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelPayrollPeriodInfo.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelPayrollPeriodInfo.add(jLabel6, gridBagConstraints);

        jLabel9.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelPayrollPeriodInfo.add(jLabel9, gridBagConstraints);

        jLabel7.setText("Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panelPayrollPeriodInfo.add(jLabel7, gridBagConstraints);

        labelDatePrepared.setBackground(new java.awt.Color(255, 255, 255));
        labelDatePrepared.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelDatePrepared.setText(" ");
        labelDatePrepared.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        labelDatePrepared.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelPayrollPeriodInfo.add(labelDatePrepared, gridBagConstraints);

        labelType.setBackground(new java.awt.Color(255, 255, 255));
        labelType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelType.setText(" ");
        labelType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        labelType.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelPayrollPeriodInfo.add(labelType, gridBagConstraints);

        comboStatus.setEditable(true);
        comboStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panelPayrollPeriodInfo.add(comboStatus, gridBagConstraints);

        txtNotes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelPayrollPeriodInfo.add(txtNotes, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        labelFrom.setBackground(new java.awt.Color(255, 255, 255));
        labelFrom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelFrom.setText(" ");
        labelFrom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        labelFrom.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel2.add(labelFrom, gridBagConstraints);

        jLabel10.setText("To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        labelTo.setBackground(new java.awt.Color(255, 255, 255));
        labelTo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelTo.setText(" ");
        labelTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        labelTo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(labelTo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelPayrollPeriodInfo.add(jPanel2, gridBagConstraints);

        btnFinalized.setText("Finalized");
        btnFinalized.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizedActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPayrollPeriodInfo.add(btnFinalized, gridBagConstraints);

        jLabel13.setText("Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelPayrollPeriodInfo.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelPayrollPeriod.add(panelPayrollPeriodInfo, gridBagConstraints);

        panelLeft.add(panelPayrollPeriod, java.awt.BorderLayout.NORTH);

        jSplitPane1.setLeftComponent(panelLeft);

        panelCenter.setLayout(new java.awt.GridBagLayout());

        panelEmployeeInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelEmployeeInfo.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Employee ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        panelEmployeeInfo.add(jLabel1, gridBagConstraints);

        txtEmployeeID.setEditable(false);
        txtEmployeeID.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        txtEmployeeID.setMinimumSize(new java.awt.Dimension(2, 22));
        txtEmployeeID.setPreferredSize(new java.awt.Dimension(55, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        panelEmployeeInfo.add(txtEmployeeID, gridBagConstraints);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(jPanel1, gridBagConstraints);

        labelName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(labelName, gridBagConstraints);

        labelCompleteName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelCompleteName.setForeground(java.awt.Color.blue);
        labelCompleteName.setText("Juan Dela Cruz");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(labelCompleteName, gridBagConstraints);

        jLabel38.setText("Position");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(jLabel38, gridBagConstraints);

        panelContactInfo4.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary Rates"));
        panelContactInfo4.setLayout(new java.awt.GridBagLayout());

        jLabel32.setText("Basic Pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel32, gridBagConstraints);

        jLabel39.setText("Daily Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel39, gridBagConstraints);

        jLabel40.setText("Hourly Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel40, gridBagConstraints);

        jLabel41.setText("Minute Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel41, gridBagConstraints);

        jLabel42.setText("Helper Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel42, gridBagConstraints);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 1.0;
        panelContactInfo4.add(jPanel9, gridBagConstraints);

        textBasicSalary.setEditable(false);
        textBasicSalary.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));
        textBasicSalary.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(textBasicSalary, gridBagConstraints);

        textDailyRate.setEditable(false);
        textDailyRate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));
        textDailyRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(textDailyRate, gridBagConstraints);

        textHourlyRate.setEditable(false);
        textHourlyRate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));
        textHourlyRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(textHourlyRate, gridBagConstraints);

        textMinuteRate.setEditable(false);
        textMinuteRate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));
        textMinuteRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(textMinuteRate, gridBagConstraints);

        textAllowance.setEditable(false);
        textAllowance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));
        textAllowance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(textAllowance, gridBagConstraints);

        jLabel16.setText("Pay Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelContactInfo4.add(jLabel16, gridBagConstraints);

        labelPayType.setForeground(java.awt.Color.blue);
        labelPayType.setText("position");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelContactInfo4.add(labelPayType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(panelContactInfo4, gridBagConstraints);

        labelPostion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelPostion.setForeground(java.awt.Color.blue);
        labelPostion.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelEmployeeInfo.add(labelPostion, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        panelCenter.add(panelEmployeeInfo, gridBagConstraints);

        panelOthers.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelOthers.setLayout(new java.awt.GridBagLayout());

        panelDTR.setLayout(new java.awt.GridBagLayout());

        jPanel7.setMaximumSize(new java.awt.Dimension(150, 33));
        jPanel7.setMinimumSize(new java.awt.Dimension(150, 33));
        jPanel7.setPreferredSize(new java.awt.Dimension(150, 33));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        btnInsertDetail.setMnemonic('I');
        btnInsertDetail.setText("Insert New Detail");
        btnInsertDetail.setMaximumSize(new java.awt.Dimension(140, 23));
        btnInsertDetail.setMinimumSize(new java.awt.Dimension(140, 23));
        btnInsertDetail.setPreferredSize(new java.awt.Dimension(140, 23));
        btnInsertDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertDetailActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(21, 5, 0, 5);
        jPanel7.add(btnInsertDetail, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel7.add(btnDelete, gridBagConstraints);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panelDTR.add(jPanel7, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel13.add(jLabel17, gridBagConstraints);

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel13.add(txtTotal, gridBagConstraints);

        labelPayslipDetailInfo.setText("info:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel13.add(labelPayslipDetailInfo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        panelDTR.add(jPanel13, gridBagConstraints);

        tableDTR.setAutoCreateRowSorter(true);
        tableDTR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableDTR.setFillsViewportHeight(true);
        tableDTR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDTRMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableDTR);

        jTabbedPane2.addTab("PaySlip Details", jScrollPane4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        panelDTR.add(jTabbedPane2, gridBagConstraints);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 32));
        jPanel3.setMinimumSize(new java.awt.Dimension(0, 32));
        jPanel3.setPreferredSize(new java.awt.Dimension(592, 32));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        labelPayslipHeader.setText(" ");
        jPanel3.add(labelPayslipHeader);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelDTR.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelOthers.add(panelDTR, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelCenter.add(panelOthers, gridBagConstraints);

        jSplitPane1.setRightComponent(panelCenter);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        MainApp.messagePanelObservable.callObserver(new PanelMessage("Payslip", "remove"));
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        ce = new Employee();
        initScreen();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (ce != null) {

            try {


                JOptionPane.showMessageDialog(this, "Employee information save.", "Employee", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tableEmployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEmployeesMouseClicked
        if (evt.getClickCount() > 1) {

            JTable jTable = (JTable) evt.getSource();
            if (jTable.getRowCount() > 0) {
                int row = jTable.getSelectedRow();
                if (row < 0) {
                    return;
                }

                Employee v = (Employee) jTable.getValueAt(row, 3);

                if (v != null) {
                    processEmployee(v);
                }
            }
        }
    }//GEN-LAST:event_tableEmployeesMouseClicked

    private void processEmployee(Employee v) {
//        try {
//            dbms.useNewDBInstance();
//            //ce = Employee.getEmployeeByTid(v.getTid());
//            KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();
//            if (kv == null) {
//                return;
//            } else {
//            }
//            synchronized (this) {
//
//                ce = Employee.getEmployeeByTid(v.getId());
//            //    dbms.getDBInstance().ext().refresh(ce, Integer.MAX_VALUE);
//                System.out.println("payslipinformation 1");
//                PayslipReports.processPayslip((Long) kv.getValue(), ce);
//                System.out.println("payslipinformation 2");
//                initScreen();
//                System.out.println("payslipinformation 3");
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
//        } finally {
//            dbms.closeNewDB();
//        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this transaction.", "Confirm", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {

            if (tableDTR.getRowCount() > 0) {

                if (tableDTR.getRowCount() > 0) {
                    int row = tableDTR.getSelectedRow();
                    DailyTimeRecord dtr = (DailyTimeRecord) tableDTR.getValueAt(row, 2);

                    if (dtr != null) {
                        try {
                            dtr.businessRuleDelete();
                            //    dbms.getDBInstance().delete(dtr);
                            initPayslipDetail();
                        } catch (TransactionException ex) {
                            JOptionErrorMessage.showErrorMessage("Daily Time Record", ex.getSimpleMessage());
                        } catch (Exception ex) {
                            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
}//GEN-LAST:event_btnDeleteActionPerformed

    private void btnInsertDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertDetailActionPerformed
        PaySlipDetail psd = new PaySlipDetail(ce.getPayslip(), PayslipDetailType.Adjustment.name(), false);
        openPaySlipDialog(psd);
}//GEN-LAST:event_btnInsertDetailActionPerformed

    private void tableDTRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDTRMouseClicked
        if (evt.getClickCount() > 1) {

            JTable jTable = (JTable) evt.getSource();
            if (jTable.getRowCount() > 0) {
                int row = jTable.getSelectedRow();
                PaySlipDetail dtr = (PaySlipDetail) jTable.getValueAt(row, 1);

                if (dtr != null) {
                    labelPayslipDetailInfo.setToolTipText("DDDjunald");
                    try {
                        openPaySlipDialog(dtr);
                    } catch (Exception ex) {
                        Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
}//GEN-LAST:event_tableDTRMouseClicked

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();
        if (kv == null) {
            return;
        } else {
        }

        NonEditableDefaultTableModel dtm = new NonEditableDefaultTableModel();
        DateTableCellRenderer dtcr = new DateTableCellRenderer("MM/dd/yyyy");

        try {

            List<Employee> employeeList = ppService.employeeListForPayslip((Long) kv.getValue());

            dtm.setColumnIdentifiers(new String[]{"#", "IDNo", "Position", "Name", "Amount"});
            int row = 1;
            for (Employee e : employeeList) {

                if (e != null) {
                    //Object[] o = new Object[]{row++, e.getIdNumber(), e.getPosition(), e, e.getPayslipReport().getNetTotal()};
                    Object[] o = new Object[]{row++, e.getIdNumber(), e.getPosition(), e, e.getPayslip().netTotal()};
                    dtm.addRow(o);
                }
            }         
        } catch (Exception ex) {
            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex);


        } finally {
            //dbms.closeNewDB();
        }

        NumberTableCellRenderer ntcr = new NumberTableCellRenderer();
        tableEmployees.setModel(dtm);
//        tableEmployees.getColumn("DateOfBirth").setCellRenderer(dtcr);
        tableEmployees.getColumn("#").setMaxWidth(30);
        tableEmployees.getColumn("#").setMinWidth(30);
        tableEmployees.getColumn("IDNo").setMaxWidth(50);
        tableEmployees.getColumn("IDNo").setMinWidth(50);
        tableEmployees.getColumn("Position").setMaxWidth(70);
        tableEmployees.getColumn("Position").setMinWidth(70);
        tableEmployees.getColumn("Amount").setCellRenderer(ntcr);

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void comboPayrollPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPayrollPeriodActionPerformed
        KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();
        if (kv == null) {
            return;
        } else {
        }
        try {
            PayrollPeriod pp = ppDao.find((Long) kv.getValue());
            labelFrom.setText(sdf.format(pp.getDateFrom()));
            labelTo.setText(sdf.format(pp.getDateTo()));
            labelDatePrepared.setText(sdf.format(pp.getDatePrepared()));
            txtNotes.setText(pp.getNotes());
            labelType.setText(pp.getPayrollPeriodType());
            comboStatus.setSelectedItem(pp.getStatus());
            if (pp.getStatus().equals(PayrollPeriodStatus.Generated.name())) {
                btnFinalized.setEnabled(false);
                btnInsertDetail.setEnabled(false);
                btnDelete.setEnabled(false);
            } else {
                btnFinalized.setEnabled(true);
                btnInsertDetail.setEnabled(true);
                btnDelete.setEnabled(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_comboPayrollPeriodActionPerformed

    private void btnFinalizedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizedActionPerformed
        KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();
        String msg = "Are you sure you want to finalized this Payroll Period Transaction?\n"
                + kv.getKey() + " You cannot undo and update any PaySlipDetail and Daily Time Record. \n"
                + "Proceed?";
        int result = JOptionPane.showConfirmDialog(this, msg, "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (result != JOptionPane.YES_OPTION) {
            return;
        }

        if (kv == null) {
            return;
        } else {
        }

//        try {
//            dbms.useNewDBInstance();
//
//            ppService.finalizedPaySlip((Long) kv.getValue());
//
//        } catch (TransactionException ex) {
//            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex.getSimpleMessage());
//
//
//        } catch (Exception ex) {
//            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex);
//
//
//        } finally {
//            //     dbms.closeNewDB();
//        }

    }//GEN-LAST:event_btnFinalizedActionPerformed

    private void includeOthersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_includeOthersActionPerformed
        try {
            initComboBoxes();
        } catch (Exception ex) {
            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_includeOthersActionPerformed

    private void btnPayslipAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayslipAllActionPerformed
//        KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();
//        if (kv == null) {
//            return;
//        }
//
//        String msg = "Are you sure you want to process payslip for: \n " + kv.getKey();
//        int result = JOptionPane.showConfirmDialog(this, msg, "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//        if (result != JOptionPane.YES_OPTION) {
//            return;
//        }
//
//
//        try {
//            dbms.useNewDBInstance();
//
//            PayrollPeriod pp = ppDao.find((Long) kv.getValue());
//            List<Employee> employeeList = ppService.preparePayslip((Long) kv.getValue(), null);
//            List list = new ArrayList();
//
//            for (Employee eep : employeeList) {
//                if (eep.getPayslipReport() != null && eep.getPayslipReport().getList().size() > 0) {
//                    list.add(eep.getPayslipReport());
//                }
//            }
//
//            SimpleDateFormat _sdf = MyDateFormatter.getSimpleDateTimeFormatter2();
//
//            HashMap parameters = new HashMap();
//            //Company cs = CompanySetting.companySetting();
//            Company cs = new Company();
//
//            parameters.put("REPORT_TITLE", cs.getDescription());
//            String payroll_period = pp.getPayrollPeriodCode() + " - [" + _sdf.format(pp.getDateFrom()) + "-" + _sdf.format(pp.getDateTo()) + "]";
//            parameters.put("PAYROLL_PERIOD", "Payroll Period: " + payroll_period);
//            parameters.put("DATE_GENERATED", _sdf.format(pp.getDatePrepared()));
//            parameters.put("PREPARED_BY", dbms.user.getUsername());
//            parameters.put("SUBREPORT_DIR", dbms.codebaseReports);
//
//            System.out.println("payslip count: " + list.size());
//            ReportViewerFactory rvf = new ReportViewerFactory("Payroll", parameters, list);
//
//            JRViewer jrv = rvf.getReport(false);
//
//            rvf.showReport(jrv);
//
//        } catch (Exception ex) {
//            Logger.getLogger(PaySlipProcess.class.getName()).log(Level.SEVERE, null, ex);
//        }
}//GEN-LAST:event_btnPayslipAllActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFinalized;
    private javax.swing.JButton btnInsertDetail;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPayslipAll;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboPayrollPeriod;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JCheckBox includeOthers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel labelCompleteName;
    private javax.swing.JLabel labelDatePrepared;
    private javax.swing.JLabel labelFrom;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPayType;
    private javax.swing.JLabel labelPayslipDetailInfo;
    private javax.swing.JLabel labelPayslipHeader;
    private javax.swing.JLabel labelPostion;
    private javax.swing.JLabel labelTo;
    private javax.swing.JLabel labelType;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelContactInfo4;
    private javax.swing.JPanel panelDTR;
    private javax.swing.JPanel panelEmployeeInfo;
    private javax.swing.JPanel panelLeft;
    private javax.swing.JPanel panelLoaderRate;
    private javax.swing.JPanel panelOthers;
    private javax.swing.JPanel panelPayrollPeriod;
    private javax.swing.JPanel panelPayrollPeriodInfo;
    private javax.swing.JPanel panelTop;
    private javax.swing.JTable tableDTR;
    private javax.swing.JTable tableEmployees;
    private javax.swing.JFormattedTextField textAllowance;
    private javax.swing.JFormattedTextField textBasicSalary;
    private javax.swing.JFormattedTextField textDailyRate;
    private javax.swing.JFormattedTextField textHourlyRate;
    private javax.swing.JFormattedTextField textMinuteRate;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtNotes;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void initComboBoxes() throws Exception {

        for (PayrollPeriodStatus pps : PayrollPeriodStatus.values()) {
            comboStatus.addItem(pps.name());
        }

        comboPayrollPeriod.removeAllItems();
        for (PayrollPeriod p : ppDao.getPayrollPeriods(includeOthers.isSelected())) {
            String code = p.getPayrollPeriodType() + " :[" + sdf.format(p.getDateFrom()) + "-" + sdf.format(p.getDateTo()) + "] " + p.getPayrollPeriodCode();
            KeyValue kv = new KeyValue(code, p.getId());
            comboPayrollPeriod.addItem(kv);
        }


    }

    private void initEmployee(Employee ce) {
        this.ce = ce;
        if (this.ce != null) {
            initScreen();
        }
    }

    private void initScreen() {
        disabledComponents(true);
        txtEmployeeID.setText(ce.getIdNumber());

        labelCompleteName.setText(ce.getName());

        labelPostion.setText(ce.getPosition().getDescription());

        labelPayType.setText(ce.getPayType() == null ? "please defined" : ce.getPayType());

        textBasicSalary.setValue(ce.getSalary());
        textDailyRate.setValue(ce.getDailyRate());
        textHourlyRate.setValue(ce.getHourRate());
        textMinuteRate.setValue(ce.getMinuteRate());
        textAllowance.setValue(ce.getAllowance());

        if (ce.getPayslip() != null) {
            labelPayslipHeader.setText(ce.getPayslip().getDescription());

        } else {
            labelPayslipHeader.setText("no description");
        }
//        txtDateTo.setDate(new Date());
//        txtDateFrom.setDate(new Date());

        initPayslipDetail();
        initJOB();

//comboDepartment
//comboBranch

    }

    private void initPayslipDetail() {

        try {

            NonEditableDefaultTableModel dtm = new NonEditableDefaultTableModel();
            TransactionNumberTableCellRenderer tntcr = new TransactionNumberTableCellRenderer(1);
            DateTableCellRenderer dtcr = new DateTableCellRenderer("MM/dd/yy");
            dtm.setColumnIdentifiers(new String[]{"#", "Type", "Description", "Amount", "Quantity", "Total"});

            int rowCounter = 1;
            double total = 0.0;
            for (PaySlipDetail v : ce.getPayslip().getPayslipDetails()) {
                String loadingDesc = v.getDescription();

                double ntotal = v.isIsDeduction() ? (-1 * v.getTotal()) : v.getTotal();
                Object[] o = new Object[]{rowCounter++, v, loadingDesc,
                    v.getAmount(), 0, ntotal};
                total = total + ntotal;
                dtm.addRow(o);
            }

            tableDTR.setModel(dtm);
            NumberTableCellRenderer ntcr = new NumberTableCellRenderer();
            NumberTableCellRenderer ntcr2 = new NumberTableCellRenderer("#.##");
            tableDTR.getColumn("Amount").setCellRenderer(ntcr);
            tableDTR.getColumn("Total").setCellRenderer(tntcr);
            tableDTR.getColumn("Quantity").setCellRenderer(ntcr2);
            // tableDTR.getColumn("Loader Count").setCellRenderer(ntcr2);
            tableDTR.getColumn("Type").setMaxWidth(110);
            //  tableDTR.getColumn("Description").setMaxWidth(140);
            tableDTR.getColumn("#").setMaxWidth(30);
            tableDTR.getColumn("Amount").setMaxWidth(80);
            tableDTR.getColumn("Quantity").setMaxWidth(80);
            //  tableDTR.getColumn("Loader Count").setMaxWidth(80);
            tableDTR.getColumn("Total").setMaxWidth(80);
            tableDTR.getColumn("Total").setMinWidth(80);

            txtTotal.setText(MyNumberFormatter.formatAmount(total));

        } catch (Exception ex) {
            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initJOB() {
        //read job from trucking or box deliveries
    }

    private void openPaySlipDialog(PaySlipDetail d) {
        try {
            PaySlipDetail psd = d;
            if (d.getId() != -1) {
                psd = PaySlipDetail.getPaySlipDetailByTid(d.getId());
                psd.setPaySlip(d.getPaySlip());

            }

            PaySlipEntry dui = new PaySlipEntry(null, true, psd, ce);
            dui.setLocationRelativeTo(this);
            dui.setVisible(true);
            if (dui.selectedButton == SelectedButton.Save) {
                try {
                    if (dui.psd.getId() != -1) {
                        boolean found = false;
                        for (PaySlipDetail psdd : ce.getPayslip().getPayslipDetails()) {
                            if (psdd.getId() == dui.psd.getId()) {
                                found = true;
                                break;
                            }
                        }
                        if (!found) {
                            ce.getPayslip().getPayslipDetails().add(d);
                        }
                    }
                    d = dui.psd;
                    processEmployee(ce);
                    //initPayslipDetail();
                } catch (Exception ex) {
                    Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(PaySlipInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
