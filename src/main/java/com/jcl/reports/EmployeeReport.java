/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmployeeInformation.java
 *
 * Created on Sep 27, 2010, 1:13:42 PM
 */
package com.jcl.reports;

import com.jcl.dao.CompanySettingDao;
import com.jcl.dao.PayrollPeriodDao;
import com.jcl.dbms.dbms;
import com.jcl.main.MainApp;
import com.jcl.model.CompanySetting;
import com.jcl.model.Employee;
import com.jcl.model.PayrollPeriod;
import com.jcl.observables.PanelMessage;
import com.jcl.payroll.transaction.PaySlipProcess2;
import com.jcl.payroll.transaction.PaySlipReportObject;
import com.jcl.payroll.transaction.PaySlipReportRow;
import com.jcl.utilities.MyDateFormatter;
import com.jcl.utilities.TransactionException;
import com.jcl.verycommon.JOptionErrorMessage;
import com.jcl.utils.JPanelProgress;
import com.jcl.utils.KeyValue;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author jlavador
 */
@Component
public class EmployeeReport extends javax.swing.JPanel {

    private KeyValue selectedReport;
    private boolean isInitializing = false;
    private SimpleDateFormat sdf;
    @Autowired
    PayrollPeriodDao ppDao;
    @Autowired
    CompanySettingDao csDao;
    @Autowired
    PayslipReports prService;
    @Autowired
    PaySlipProcess2 ppService;

    /**
     * Creates new form EmployeeInformation
     */
    public EmployeeReport() {
        initComponents();
    }

    public void setup() {
        sdf = MyDateFormatter.getSimpleDateTimeFormatter();
        initScreen(true);

        initComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelTop = new javax.swing.JPanel();
        panelBottom = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelCenter = new javax.swing.JPanel();
        panelReportViewer = new javax.swing.JPanel();
        panelLeft = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboReports = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        panelTransactionDate = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtFromDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        txtToDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        comboPayrollPeriod = new javax.swing.JComboBox();
        panelGrower = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnGenerate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.BorderLayout());

        panelTop.setMinimumSize(new java.awt.Dimension(0, 5));
        panelTop.setPreferredSize(new java.awt.Dimension(750, 5));

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1322, Short.MAX_VALUE)
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(panelTop, java.awt.BorderLayout.PAGE_START);

        panelBottom.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelBottom.setMinimumSize(new java.awt.Dimension(0, 32));
        panelBottom.setPreferredSize(new java.awt.Dimension(750, 40));
        panelBottom.setLayout(new java.awt.GridBagLayout());

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panelBottom.add(btnClose, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelBottom.add(jPanel5, gridBagConstraints);

        add(panelBottom, java.awt.BorderLayout.PAGE_END);

        jSplitPane1.setDividerLocation(375);

        panelCenter.setLayout(new java.awt.GridBagLayout());

        panelReportViewer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelReportViewer.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelCenter.add(panelReportViewer, gridBagConstraints);

        jSplitPane1.setRightComponent(panelCenter);

        panelLeft.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBackground(javax.swing.UIManager.getDefaults().getColor("inactiveCaption"));
        jPanel6.setMinimumSize(new java.awt.Dimension(98, 32));
        jPanel6.setPreferredSize(new java.awt.Dimension(103, 32));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Report Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel6.add(jLabel5, gridBagConstraints);

        comboReports.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboReports.setNextFocusableComponent(comboPayrollPeriod);
        comboReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboReportsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(comboReports, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelLeft.add(jPanel6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        panelTransactionDate.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        panelTransactionDate.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("From Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelTransactionDate.add(jLabel9, gridBagConstraints);

        txtFromDate.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelTransactionDate.add(txtFromDate, gridBagConstraints);

        jLabel10.setText("To Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panelTransactionDate.add(jLabel10, gridBagConstraints);

        txtToDate.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelTransactionDate.add(txtToDate, gridBagConstraints);

        jLabel6.setText("Payroll Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        panelTransactionDate.add(jLabel6, gridBagConstraints);

        comboPayrollPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPayrollPeriodActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        panelTransactionDate.add(comboPayrollPeriod, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(panelTransactionDate, gridBagConstraints);

        panelGrower.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(panelGrower, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnGenerate.setText("Generate Report");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });
        jPanel2.add(btnGenerate);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jPanel2, gridBagConstraints);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelLeft.add(jPanel1, gridBagConstraints);

        jSplitPane1.setLeftComponent(panelLeft);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        MainApp.getMessagePanelObservable().callObserver(new PanelMessage("Employee Report", "remove"));
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed

        panelReportViewer.removeAll();
        panelReportViewer.add(new JPanelProgress());
        panelReportViewer.updateUI();
        btnGenerate.setEnabled(false);

        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {
                generateReport();
            }
        });
        t.start();
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void generateReport() {
        try {


            if (selectedReport.getValue().equals("Separator")) {
                return;
            }

            CompanySetting cs = csDao.find(1L);
            HashMap parameters = new HashMap();
            

            Date fDate = txtFromDate.getDate();
            Date tDate = txtToDate.getDate();
            boolean checkDJ = false;

            JRViewer jrv = null;

            SimpleDateFormat sdf = MyDateFormatter.getSimpleDateTimeFormatter();
            SimpleDateFormat sdf2 = MyDateFormatter.getDateTimeFormatter();

            String filename = "";
            List<PaySlipReportRow> paysliplist = new ArrayList();
            if (selectedReport.getValue().toString() != null) {

                checkeDatesEntered();
                filename = "PayslipDetailList";
                String datefrom_to = sdf.format(fDate) + " - " + sdf.format(tDate);

                paysliplist = ppService.employeeListForPayslipReports(fDate, tDate, new String[]{" ", " "});
                System.out.println("paysliplist count: " + paysliplist.size());
                parameters.put("DATE_FROMTO", datefrom_to);
                parameters.put("REPORT_TITLE", cs.getDescription() + " - " + selectedReport.getValue().toString());
                parameters.put("DATE_GENERATED", sdf2.format(new Date()));

            } else {
                throw new TransactionException("Report file not found");
            }
           
            jrv = generateReportDirect(filename, parameters, paysliplist);

            if (jrv != null) {
                panelReportViewer.removeAll();
                panelReportViewer.add(jrv);
                panelReportViewer.updateUI();
            }
        } catch (NullPointerException ex) {
            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex);
            panelReportViewer.removeAll();
        } catch (TransactionException ex) {
            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex.getSimpleMessage());
            panelReportViewer.removeAll();
        } catch (Exception ex) {
            JOptionErrorMessage.showErrorMessage(this.getClass().getCanonicalName(), ex);
            panelReportViewer.removeAll();
        }

        btnGenerate.setEnabled(true);
    }

    private void comboReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboReportsActionPerformed
        if (isInitializing) {
            return;
        }
        JComboBox jcb = (JComboBox) evt.getSource();
        selectedReport = (KeyValue) jcb.getSelectedItem();

        if (selectedReport.getValue().equals("Separator")) {
            initScreen(false);
            comboPayrollPeriod.setEnabled(false);
            return;
        }

//        jLabel9.setText("From Date");
//        JComboBox jcb = (JComboBox) evt.getSource();
//        selectedReport = (KeyValue) jcb.getSelectedItem();
//
//        if (selectedReport.getValue().equals("Separator")) {
//            initScreen(false);
//            comboClient.setEnabled(false);
//            return;
//        }
//
//        if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalance)) {
//            initScreen(false);
//            comboClient.setEnabled(false);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalanceSupplier)) {
//            initScreen(false);
//            comboClient.setEnabled(true);
//            initComboBox(ClientType.Vendor);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalancePerGrower)) {
//            initScreen(false);
//            comboClient.setEnabled(true);
//            initComboBox(ClientType.Grower);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalancePerGrowerWeekly)) {
//            initScreen(true);
//
//            jLabel9.setText("Cut off Date");
//            txtToDate.setEnabled(false);
//            comboClient.setEnabled(true);
//            initComboBox(ClientType.Grower);
//
//
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalanceAllGrower)) {
//            initScreen(false);
//            comboClient.setEnabled(false);
//            comboClient.setSelectedIndex(-1);
//
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalanceAllGrowerWeekly)) {
//            initScreen(true);
//            jLabel9.setText("Cut off Date");
//            txtToDate.setEnabled(false);
//            comboClient.setEnabled(false);
//            comboClient.setSelectedIndex(-1);
//
//        } else if (selectedReport.getValue().equals(InventoryTemplate.InventoryBalanceAllGrowerCrossTab)) {
//            initScreen(false);
//            comboClient.setEnabled(false);
//            comboClient.setSelectedIndex(-1);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.TotalDeliveriesAllGrower)) {
//            initScreen(true);
//            comboClient.setEnabled(false);
//            comboClient.setSelectedIndex(-1);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.TotalDeliveriesPerGrowerWeekly)) {
//            initScreen(true);
//            comboClient.setEnabled(true);
//            comboClient.setSelectedIndex(-1);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.TotalDeliveriesPerGrowerDaily)) {
//            initScreen(true);
//            comboClient.setEnabled(true);
//            comboClient.setSelectedIndex(-1);
//        } else if (selectedReport.getValue().equals(InventoryTemplate.BoxDeliveryTransactionList)) {
//            initScreen(true);
//            comboClient.setEnabled(true);
//            comboClient.setSelectedIndex(-1);
//        } else if (InvoiceType.valueOf(selectedReport.getValue().toString()) != null) {
//            initScreen(true);
//            comboClient.setEnabled(true);
//            comboClient.setSelectedIndex(-1);
//        }
    }//GEN-LAST:event_comboReportsActionPerformed

    private void comboPayrollPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPayrollPeriodActionPerformed

        if (!isInitializing) {
            KeyValue kv = (KeyValue) comboPayrollPeriod.getSelectedItem();


            PayrollPeriod pp = null;
            if (kv != null && kv.getValue() != null) {
                Long payrollPeriodID = (Long) kv.getValue();
                pp = ppDao.find(payrollPeriodID);
            }

            this.txtFromDate.setDate(pp.getDateFrom());
            this.txtToDate.setDate(pp.getDateTo());
        }
    }//GEN-LAST:event_comboPayrollPeriodActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGenerate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboPayrollPeriod;
    private javax.swing.JComboBox comboReports;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelGrower;
    private javax.swing.JPanel panelLeft;
    private javax.swing.JPanel panelReportViewer;
    private javax.swing.JPanel panelTop;
    private javax.swing.JPanel panelTransactionDate;
    private org.jdesktop.swingx.JXDatePicker txtFromDate;
    private org.jdesktop.swingx.JXDatePicker txtToDate;
    // End of variables declaration//GEN-END:variables
    KeyValue kvnull = new KeyValue(" ", null);

    private void initComboBoxes() {
        try {
            isInitializing = true;
            for (KeyValue kv : getReportList()) {
                comboReports.addItem(kv);
            }

            comboPayrollPeriod.removeAllItems();
            for (PayrollPeriod p : ppDao.getProcessPayrollPeriods()) {
                //String code = p.getPayrollPeriodType() + " :[" + sdf.format(p.getDateFrom()) + "-" + sdf.format(p.getDateTo()) + "] " + p.getPayrollPeriodCode();
                String code = "(" + sdf.format(p.getDateFrom()) + "-" + sdf.format(p.getDateTo()) + ") " + p.getPayrollPeriodCode() + "-" + p.getStatus();
                KeyValue kv = new KeyValue(code, p.getId());
                comboPayrollPeriod.addItem(kv);
            }

            comboReports.setSelectedItem(null);
            comboPayrollPeriod.setSelectedItem(kvnull);


            isInitializing = false;
        } catch (Exception ex) {
            Logger.getLogger(EmployeeReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initScreen(boolean s) {
        comboPayrollPeriod.setEnabled(s);
        iniDatesText(s);
    }

    private void iniDatesText(boolean s) {
        txtFromDate.setEnabled(s);
        txtToDate.setEnabled(s);
    }

    private List<KeyValue> getReportList() {

        List<KeyValue> list = new ArrayList<KeyValue>();
        KeyValue kv1 = new KeyValue("SSS", "SSStemplate");
        KeyValue kv2 = new KeyValue("PHIL-HEALTH", "PHILHEALTHtemplate");
        KeyValue kv3 = new KeyValue("WITH HOLDING TAX", "WITHHOLDINGTAXtemplate");
        KeyValue kv4 = new KeyValue("PAG-IBIG", "PAGIBIGtemplate");
        KeyValue kvSeparator = new KeyValue("-----------------", "Separator");
        KeyValue kv5 = new KeyValue("PAY SLIP LIST", "PAYSLIPLISTtemplate");

        list.add(kv1);
        list.add(kv2);
        list.add(kv3);
        list.add(kv4);
        list.add(kvSeparator);
        list.add(kv5);

        return list;
    }

    private void checkeDatesEntered() throws TransactionException {

        Date fDate = txtFromDate.getDate();
        Date tDate = txtToDate.getDate();

        if (fDate == null) {
            throw new TransactionException("Plese enter correct (from) dates.! ");
        }
        if (tDate == null) {
            throw new TransactionException("Plese enter correct (to) dates.! ");
        }

        if (fDate.after(tDate)) {
            throw new TransactionException("Plese enter correct dates.!\n(to) date must be greater than (from) date");
        }
    }
    
     public JRViewer generateReportDirect(String filename, HashMap parameters, List<PaySlipReportRow> paysliplist) throws FileNotFoundException, JRException {

        JRViewer jrw = null;

        JRDataSource jrsource = new JRBeanCollectionDataSource( paysliplist);
        String jrxml = dbms.codebaseReports + filename + ".jrxml";
        String jasper = dbms.codebaseReports + filename + ".jasper";
        //new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{List})

        File f = new File(jasper);
        if (!f.exists()) {
            System.out.println("jasper file not found, compiling jrxml");
            JasperCompileManager.compileReportToFile(jrxml, jasper);
        } else {
            System.out.println("jasper found");
            // throw new FileNotFoundException("cannot find " + jasper);
        }

        System.out.println("loading jasper");
        JasperReport jr = (JasperReport) JRLoader.loadObjectFromLocation(jasper);
        System.out.println("creating jasper print");
        JasperPrint jp = JasperFillManager.fillReport(jr, parameters, jrsource);
        System.out.println("jasper print created");
        jrw = new JRViewer(jp);

        return jrw;
    }
}
